{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../src/libs/rehypeCodeWrap.js"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  FieldDefs,\n  makeSource,\n} from 'contentlayer/source-files';\nimport readingTime from 'reading-time';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeExternalLinks from 'rehype-external-links';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeSlug from 'rehype-slug';\nimport remarkBreaks from 'remark-breaks';\nimport remarkGfm from 'remark-gfm';\n\nimport rehypeCodeWrap from './src/libs/rehypeCodeWrap';\n\nconst fields: FieldDefs = {\n  title: { type: 'string', required: true },\n  description: { type: 'string', required: true },\n  date: { type: 'date', required: true },\n  tags: { type: 'list', required: true, of: { type: 'string' } },\n  draft: { type: 'boolean' },\n  image: { type: 'string' },\n  icon: { type: 'string' },\n};\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  contentType: 'mdx',\n  filePathPattern: `**/*.mdx`,\n  fields,\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (post) => `/${post._raw.flattenedPath}`,\n    },\n    readingMinutes: {\n      type: 'string',\n      resolve: (post) => Math.ceil(readingTime(post.body.raw).minutes),\n    },\n    wordCount: {\n      type: 'number',\n      resolve: (post) => post.body.raw.split(/\\s+/gu).length,\n    },\n  },\n}));\n\nconst contentSource = makeSource({\n  contentDirPath: 'posts',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkGfm, remarkBreaks],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypeCodeWrap,\n      rehypePrism,\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: ['anchor'],\n            ariaLabel: 'anchor',\n          },\n        },\n      ],\n      [\n        rehypeExternalLinks,\n        {\n          target: '_blank',\n          rel: ['noopener noreferrer'],\n        },\n      ],\n    ],\n  },\n});\n\nexport default contentSource;\n", "import { visit } from 'unist-util-visit';\n\nexport default function rehypeCodeWrap() {\n  return (tree) => {\n    visit(tree, { tagName: 'pre' }, (node, index) => {\n      if (!node.children || !node.children.length) return;\n\n      // code tag\n      const { properties } = node.children[0];\n      if (!properties.className || !properties.className.length) return;\n\n      // parse code title\n      const [lang, filename] = properties.className[0]\n        .split(':')\n        .map((e) => e.trim());\n      if (filename) {\n        properties.className = lang;\n        node.properties.title = filename;\n      }\n\n      tree.children[index] = node;\n    });\n  };\n}\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EAEA;AAAA,OACK;AACP,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AACnC,OAAO,yBAAyB;AAChC,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;AACvB,OAAO,kBAAkB;AACzB,OAAO,eAAe;;;ACXtB,SAAS,aAAa;AAEP,SAAR,iBAAkC;AACvC,SAAO,CAAC,SAAS;AACf,UAAM,MAAM,EAAE,SAAS,MAAM,GAAG,CAAC,MAAM,UAAU;AAC/C,UAAI,CAAC,KAAK,YAAY,CAAC,KAAK,SAAS;AAAQ;AAG7C,YAAM,EAAE,WAAW,IAAI,KAAK,SAAS,CAAC;AACtC,UAAI,CAAC,WAAW,aAAa,CAAC,WAAW,UAAU;AAAQ;AAG3D,YAAM,CAAC,MAAM,QAAQ,IAAI,WAAW,UAAU,CAAC,EAC5C,MAAM,GAAG,EACT,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AACtB,UAAI,UAAU;AACZ,mBAAW,YAAY;AACvB,aAAK,WAAW,QAAQ;AAAA,MAC1B;AAEA,WAAK,SAAS,KAAK,IAAI;AAAA,IACzB,CAAC;AAAA,EACH;AACF;;;ADRA,IAAM,SAAoB;AAAA,EACxB,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC9C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,EACrC,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,EAC7D,OAAO,EAAE,MAAM,UAAU;AAAA,EACzB,OAAO,EAAE,MAAM,SAAS;AAAA,EACxB,MAAM,EAAE,MAAM,SAAS;AACzB;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,IAAI,KAAK,KAAK,aAAa;AAAA,IAChD;AAAA,IACA,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,YAAY,KAAK,KAAK,GAAG,EAAE,OAAO;AAAA,IACjE;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,IAClD;AAAA,EACF;AACF,EAAE;AAEF,IAAM,gBAAgB,WAAW;AAAA,EAC/B,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,WAAW,YAAY;AAAA,IACvC,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,YACpB,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,QAAQ;AAAA,UACR,KAAK,CAAC,qBAAqB;AAAA,QAC7B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
